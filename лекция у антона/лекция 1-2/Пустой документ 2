The Zen of Python, by Tim Peters  Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren't special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let's do more of those!
-------------------------------------------------------------------------------------------------------------------------------
Дзен Питона, Тим Питерс, Красивый лучше, чем некрасиво. Явное лучше, чем неявное. Простое лучше, чем сложное. Сложный лучше, чем сложный. Квартира лучше, чем вложенная. Разреженный лучше, чем плотный. Читаемость имеет значение. Особые случаи не достаточно особенные, чтобы нарушать правила. Хотя практичность превосходит чистоту. Ошибки никогда не должны проходить бесшумно. Если явно не молчать. Перед лицом двусмысленности откажитесь от соблазна гадать. Должен быть один - и желательно только один - очевидный способ сделать это. Хотя этот путь поначалу может быть неочевидным, если вы не голландец. Сейчас лучше, чем никогда. Хотя никогда не бывает лучше, чем * прямо * сейчас. Если реализацию сложно объяснить, это плохая идея. Если реализацию легко объяснить, это может быть хорошей идеей. Пространства имен - одна из отличных идей - давайте сделаем больше!
